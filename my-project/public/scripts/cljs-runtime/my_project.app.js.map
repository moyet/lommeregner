{"version":3,"sources":["my_project/app.cljs"],"mappings":"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","names":["my-project.app/current-value","reagent.core.atom","my-project.app/saved_value","my-project.app/saved_func","my-project.app/update_current","val","cljs.core/deref","js/console.log","cljs.core._EQ_","cljs.core/reset!","my-project.app/save_value","_","cljs.reader.read_string","my-project.app/save_function","func","my-project.app/do_shit","my-project.app/mini-app","my-project.app/run","reagent.dom.render","js/document.getElementById","my-project.app/reload","js/console","my-project.app/add","a","b","my-project.app/rewrite"],"sourcesContent":["(ns my-project.app\n  (:require\n    [reagent.core :as r]\n    [reagent.dom :as rdom]\n    ))\n\n(def current-value (r/atom \"0\"))\n\n(def saved_value (r/atom 0))\n\n(def saved_func (r/atom 0))\n\n\n(defn update_current [val]\n      (js/console.log \"update_current \" val \" \" @current-value)\n      (if\n        (= \"0\" @current-value)\n        (do\n          (reset! current-value val)\n          (js/console.log \"val\")\n          )\n        (do\n          (js/console.log \"@current-value\")\n          (js/console.log (str @current-value val))\n          (reset! current-value (str @current-value val))\n          )\n        )\n      )\n\n\n(defn save_value [_]\n      (reset! saved_value (cljs.reader/read-string @current-value))\n      (js/console.log \"Saved value \" @saved_value)\n      (reset! current-value \"0\")\n      )\n\n(defn save_function [func]\n      (js/console.log \"save_function \" func)\n      (save_value func)\n      (reset! saved_func func)\n      )\n\n(defn do_shit [_]\n      (js/console.log \"Shit happens\")\n\n      )\n\n(defn mini-app []\n      [:table {:border \"1\"}\n       [:tbody\n        [:tr\n         [:td {:colspan \"3\"} [:input#result {:readonly \"\" :type \"text\" :value @current-value}]]\n         [:td [:input {:type \"button\" :value \"c\" :on-click #(reset! current-value \"0\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"1\" :on-click #(update_current \"1\")}]]\n         [:td [:input {:type \"button\" :value \"2\" :on-click #(update_current \"2\")}]]\n         [:td [:input {:type \"button\" :value \"3\" :on-click #(update_current \"3\")}]]\n         [:td [:input {:type \"button\" :value \"/\" :on-click #(save_function \"/\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"4\" :on-click #(update_current \"4\")}]]\n         [:td [:input {:type \"button\" :value \"5\" :on-click #(update_current \"5\")}]]\n         [:td [:input {:type \"button\" :value \"6\" :on-click #(update_current \"6\")}]]\n         [:td [:input {:type \"button\" :value \"-\" :on-click #(save_function \"-\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"7\" :on-click #(update_current \"7\")}]]\n         [:td [:input {:type \"button\" :value \"8\" :on-click #(update_current \"8\")}]]\n         [:td [:input {:type \"button\" :value \"9\" :on-click #(update_current \"9\")}]]\n         [:td [:input {:type \"button\" :value \"+\" :on-click #(save_function \"+\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \".\" :on-click #(update_current \".\")}]]\n         [:td [:input {:type \"button\" :value \"0\" :on-click #(update_current \"0\")}]]\n         [:td [:input {:type \"button\" :value \"=\" :on-click #(do_shit \"0\") }]]\n         [:td [:input {:type \"button\" :value \"*\" :on-click #(save_function \"+\")}]]]]]\n      )\n\n(defn ^:export run []\n      (rdom/render [mini-app] (js/document.getElementById \"app\")))\n\n(defn ^:export reload []\n      (.log js/console \"reload...\")\n      (run))\n\n(defn add [a b]\n      (+ a b))\n\n(defn rewrite [val]\n      [:h2 val]\n      )\n\n"]}