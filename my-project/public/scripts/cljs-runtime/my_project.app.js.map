{"version":3,"sources":["my_project/app.cljs"],"mappings":"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","names":["my-project.app/current-value","reagent.core.atom","my-project.app/saved_value","my-project.app/saved_func","my-project.app/result","my-project.app/history","my-project.app/logitall","cljs.core/deref","js/console.log","my-project.app/add2history","val","p1__26226#","cljs.core.swap_BANG_","cljs.core.conj","my-project.app/update_current","cljs.core._EQ_","cljs.core/reset!","my-project.app/save_value","cljs.reader.read_string","my-project.app/calculate_pressed","cljs.core//","mmap","cljs.core/+","cljs.core/*","cljs.core/-","new_value","calculated","G__26229","G__26230","fexpr__26228","G__26231","my-project.app/reset_all","my-project.app/reset_history","my-project.app/create_history","my-project.app/add_history","message","fexpr__26232","js/jQuery","my-project.app/function_pressed","func","my-project.app/numberbttn","my_value","p1__26233#","my-project.app/mini-app","cljs.core.map","cljs.core.range","my-project.app/run","reagent.dom.render","js/document.getElementById","my-project.app/reload","js/console","my-project.app/add","a","b"],"sourcesContent":["(ns my-project.app\n  (:require\n    [reagent.core :as r]\n    [reagent.dom :as rdom]\n    [cljs.reader :as readder]\n    [clojure.browser.dom :as dom]\n    ))\n\n(def current-value (r/atom \"0\"))\n\n(def saved_value (r/atom nil))\n\n(def saved_func (r/atom nil))\n\n(def result (r/atom nil))\n\n(def history (r/atom [\"nil\"]))\n\n(defn logitall []\n      (do\n         (js/console.log \"current-value: \" @current-value)\n         (js/console.log \"saved_value: \" @saved_value)\n         (js/console.log \"saved_func: \" @saved_func)\n         (js/console.log \"result: \" @result)\n      ))\n\n(defn add2history [val]\n      (do\n        (swap! history #(conj % [:li val ]))\n      ))\n\n(defn update_current [val]\n      (js/console.log \"update_current \" val \" \" @current-value)\n      (if\n        (= \"0\" @current-value)\n        (do\n          (reset! current-value val)\n          (js/console.log \"val\")\n          )\n        (do\n          (js/console.log \"@current-value\")\n          (js/console.log (str @current-value val))\n          (reset! current-value (str @current-value val))\n          )))\n\n(defn save_value []\n      (reset! saved_value (cljs.reader/read-string @current-value))\n      (add2history @saved_value)\n      (js/console.log \"Saved value \" @saved_value)\n      (reset! current-value \"0\")\n      )\n\n(defn calculate_pressed []\n      (\n        let [\n             mmap {\"/\" /, \"+\" +, \"*\" *, \"-\" -},\n             new_value (cljs.reader/read-string @current-value),\n             calculated ((mmap @saved_func) @saved_value new_value),\n             ]\n            (add2history new_value)\n            (add2history (str @saved_value \" \" @saved_func \" \"  new_value \" = \" calculated))\n\n            (reset! current-value (str calculated))\n            (reset! saved_value nil)\n            (reset! saved_func nil)\n            (logitall )\n            )\n      )\n\n(defn reset_all []\n     (reset! current-value \"0\")\n     (reset! saved_value nil)\n     (reset! saved_func nil)\n     (reset! result nil)\n      )\n\n(defn reset_history []\n      (reset! history [\"nil\"]))\n\n(defn create_history []\n      [:div.container [:h3 \"History\" ] [:div#my_his.history\n           [:div#his1.alert.alert-success {:role \"alert\"}\n            [:ul#listig\n             @history\n             ]]]]\n      )\n\n(defn add_history [message]\n        ((.html (js/jQuery \"#listig\") \"Hi!\")))\n\n\n\n\n(defn function_pressed [func]\n      (if (nil? @saved_func)\n        (do\n          (save_value)\n          (add2history func)\n          (reset! saved_func func)\n          )\n        ;else\n        (do\n          (js/console.log \"We have an else \" )\n          (reset! saved_func func)\n          (add2history func)\n          (calculate_pressed)\n          )\n        )\n      )\n\n(defn numberbttn [my_value]\n      [:td {:id (#(str \"tr_\" %) my_value)} [:button.btn.btn-dark {:id my_value :type \"button\" :on-click #(update_current (str my_value))} my_value]]\n      )\n\n(defn mini-app []\n           [:div.container\n            [:div.container\n             [:p.h1 \"Lommeregner\"]\n             ]\n            [:table.table.table-bordered\n             [:tbody\n              [:tr\n               [:td {:colspan \"3\"}\n                [:div.input-group.mb-3\n                 [:input.form-control\n                  {:type \"text\" :placeholder @current-value }\n                  ]]\n                ]\n               [:td [:button.btn.btn-dark {:type \"button\" :on-click #(reset_all)} \"c\"]]]\n              [:tr\n               (map numberbttn (range 1 4))\n               [:td [:button.btn.btn-dark {:type \"button\" :on-click #(function_pressed \"/\")} \"/\"]]]\n\n              [:tr\n               (map numberbttn (range 4 7))\n\n               [:td [:button.btn.btn-dark {:type \"button\" :on-click #(function_pressed \"-\")} \"-\"]]]\n\n              [:tr\n               (map numberbttn (range 7 10))\n\n               [:td [:button.btn.btn-dark {:type \"button\" :on-click #(function_pressed \"+\")} \"+\"]]]\n\n              [:tr\n               [:td [:button.btn.btn-dark {:type \"button\" :on-click #(update_current \".\")} \".\"]]\n               (numberbttn 0)\n               [:td [:button.btn.btn-dark {:type \"button\" :on-click #(calculate_pressed)} \"=\"]]\n               [:td [:button.btn.btn-dark {:type \"button\" :on-click #(function_pressed \"*\")} \"*\"]]]\n              ]\n             ]\n            (create_history)\n            ]\n           )\n\n(defn ^:export run []\n      (rdom/render [mini-app] (js/document.getElementById \"app\")))\n\n(defn ^:export reload []\n      (.log js/console \"reload...\")\n      (run))\n\n(defn add [a b]\n      (+ a b))\n"]}