{"version":3,"sources":["my_project/app.cljs"],"mappings":";AAQA,AAAKA,AAAc,AAAA,AAACC;AAEpB,AAAKC,AAAY,AAAA,AAACD;AAElB,AAAKE,AAAW,AAAA,AAACF;AAEjB,AAAKG,AAAO,AAAA,AAACH;AAEb,AAAKI,AAAQ,AAAA,AAAA,AAACJ;AAEd,AAAA,AAAMK,AAAaC;AAAnB,AACM,AACE,AAAA,AAAAC,AAACC,AAAMJ;AAAP,AAAgB,AAAAG,AAAA,AAAA,AAACE,AAAYH;;;AAKrC,AAAA,AAAMI,AAAgBJ;AAAtB,AACM,AAAA,AAAA,AAAA,AAAAK,AAACC,AAAiCN,AAASP;;AAC3C,AACE,AAAA,AAAA,AAAAY,AAACE,AAAOd;AACR,AACE,AAACe,AAAOf,AAAcO;;AACtB,AAAA,AAACM;;AAEH,AACE,AAAA,AAACA;;AACD,AAACA,AAAe,AAAA,AAAAD,AAAMZ,AAAcO;;AACpC,AAACQ,AAAOf,AAAc,AAAA,AAAAY,AAAMZ,AAAcO;;;AAKpD,AAAA,AAAMS,AAAYC;AAAlB,AACM,AAACF,AAAOb,AAAY,AAAA,AAAAU,AAACM,AAAyBlB;;AAC9C,AAAA,AAAAY,AAACN,AAAaJ;;AACd,AAAA,AAAA,AAAAU,AAACC,AAA+BX;;AAChC,AAAA,AAACa,AAAOf;;AAGd,AAAA,AAAMmB,AAAeC;AAArB,AACM,AAACJ,AAAWI;;AACZ,AAACL,AAAOZ,AAAWiB;;AAGzB,AAAA,AAAMC,AAAWJ;AAAjB,AACO,AAAA,AAAA,AAAAK,AAAA,AAAA,AAAA,AACOC,AAAiBC,AAAOC,AAAOC;AADtC,AAEM,AAACX,AAAOf,AAAc,AAAA2B,AAAA,AAAAf,AAAqBV;AAArB0B,AAAiC,AAAA,AAAAhB,AAACM,AAAyBlB;AAA3D6B,AAAC,AAAAC,AAAA,AAAAlB,AAAOT;AAAP,AAAA,AAAA2B,AAAAA,AAACP,AAAAA,AAAAA;;AAAF,AAAA,AAAAM,AAAAA,AAAAF,AAAAC,AAAAC,AAAAF,AAAAC;;;AAInC,AAAA,AAAMG;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAI+EZ;AAJ/E,AAK4D,AAAA,AAACe,AAAOf;AALpE,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAO4D,AAAA,AAACW;AAP7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAQ4D,AAAA,AAACA;AAR7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAS4D,AAAA,AAACA;AAT7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAU4D,AAAA,AAACQ;AAV7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAY4D,AAAA,AAACR;AAZ7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAa4D,AAAA,AAACA;AAb7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAc4D,AAAA,AAACA;AAd7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAe4D,AAAA,AAACQ;AAf7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAiB4D,AAAA,AAACR;AAjB7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAkB4D,AAAA,AAACA;AAlB7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAmB4D,AAAA,AAACA;AAnB7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAoB4D,AAAA,AAACQ;AApB7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAsB4D,AAAA,AAACR;AAtB7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAuB4D,AAAA,AAACA;AAvB7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAwB4D,AAAA,AAACU;AAxB7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;AAAA,AAyB4D,AAAA,AAACF;AAzB7D,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAP,AAgCUP;;AAKV,AAAA,AAAe2B;AAAf,AACM,AAAA,AAACC,AAAaF,AAAU,AAAA,AAACG;;;AAE/B,AAAA,AAAeC;AAAf,AACM,AAAA,AAAMC;;AACN,AAACJ;;;AAEP,AAAA,AAAMK,AAAKC,AAAEC;AAAb,AACM,AAAGD,AAAEC","names":["my-project.app/current-value","reagent.core.atom","my-project.app/saved_value","my-project.app/saved_func","my-project.app/result","my-project.app/history","my-project.app/add2history","val","p1__27544#","cljs.core.swap_BANG_","cljs.core.conj","my-project.app/update_current","cljs.core/deref","js/console.log","cljs.core._EQ_","cljs.core/reset!","my-project.app/save_value","_","cljs.reader.read_string","my-project.app/save_function","func","my-project.app/calculate","cljs.core//","mmap","cljs.core/+","cljs.core/*","cljs.core/-","G__27547","G__27548","fexpr__27546","G__27549","my-project.app/mini-app","my-project.app/run","reagent.dom.render","js/document.getElementById","my-project.app/reload","js/console","my-project.app/add","a","b"],"sourcesContent":["(ns my-project.app\n  (:require\n    [reagent.core :as r]\n    [reagent.dom :as rdom]\n    [cljs.reader :as readder]\n    [clojure.browser.dom :as dom]\n    ))\n\n(def current-value (r/atom \"0\"))\n\n(def saved_value (r/atom nil))\n\n(def saved_func (r/atom nil))\n\n(def result (r/atom nil))\n\n(def history (r/atom [\"nil\"]))\n\n(defn add2history [val]\n      (do\n        (swap! history #(conj % [:li val ]))\n        )\n)\n\n\n(defn update_current [val]\n      (js/console.log \"update_current \" val \" \" @current-value)\n      (if\n        (= \"0\" @current-value)\n        (do\n          (reset! current-value val)\n          (js/console.log \"val\")\n          )\n        (do\n          (js/console.log \"@current-value\")\n          (js/console.log (str @current-value val))\n          (reset! current-value (str @current-value val))\n          )\n        )\n      )\n\n(defn save_value [_]\n      (reset! saved_value (cljs.reader/read-string @current-value))\n      (add2history @saved_value)\n      (js/console.log \"Saved value \" @saved_value)\n      (reset! current-value \"0\")\n      )\n\n(defn save_function [func]\n      (save_value func)\n      (reset! saved_func func)\n      )\n\n(defn calculate [_]\n       (\n         let [mmap {\"/\" /, \"+\" +, \"*\" *, \"-\" -}]\n             (reset! current-value ((mmap @saved_func) @saved_value (cljs.reader/read-string @current-value)))\n       ))\n\n\n(defn mini-app []\n      [:table {:border \"1\"}\n       [:tbody\n        [:tr\n         [:td {:colspan \"3\"} [:input#result {:readonly \"\" :type \"text\" :value @current-value}]]\n         [:td [:input {:type \"button\" :value \"c\" :on-click #(reset! current-value \"0\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"1\" :on-click #(update_current \"1\")}]]\n         [:td [:input {:type \"button\" :value \"2\" :on-click #(update_current \"2\")}]]\n         [:td [:input {:type \"button\" :value \"3\" :on-click #(update_current \"3\")}]]\n         [:td [:input {:type \"button\" :value \"/\" :on-click #(save_function \"/\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"4\" :on-click #(update_current \"4\")}]]\n         [:td [:input {:type \"button\" :value \"5\" :on-click #(update_current \"5\")}]]\n         [:td [:input {:type \"button\" :value \"6\" :on-click #(update_current \"6\")}]]\n         [:td [:input {:type \"button\" :value \"-\" :on-click #(save_function \"-\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \"7\" :on-click #(update_current \"7\")}]]\n         [:td [:input {:type \"button\" :value \"8\" :on-click #(update_current \"8\")}]]\n         [:td [:input {:type \"button\" :value \"9\" :on-click #(update_current \"9\")}]]\n         [:td [:input {:type \"button\" :value \"+\" :on-click #(save_function \"+\")}]]]\n        [:tr\n         [:td [:input {:type \"button\" :value \".\" :on-click #(update_current \".\")}]]\n         [:td [:input {:type \"button\" :value \"0\" :on-click #(update_current \"0\")}]]\n         [:td [:input {:type \"button\" :value \"=\" :on-click #(calculate \"0\") }]]\n         [:td [:input {:type \"button\" :value \"*\" :on-click #(save_function \"*\")}]]]\n        ]\n       [:br]\n       [:br]\n       [:h2.small \"History\"]\n       [:div.history ]\n        [:ol#histlist\n         @history\n         ]\n       ]\n      )\n\n(defn ^:export run []\n      (rdom/render [mini-app] (js/document.getElementById \"app\")))\n\n(defn ^:export reload []\n      (.log js/console \"reload...\")\n      (run))\n\n(defn add [a b]\n      (+ a b))\n"]}